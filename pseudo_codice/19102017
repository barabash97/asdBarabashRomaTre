==================================================
Esercizio 4
==================================================
NEW_QUEUE() 
	/* c è un oggetto con due pile c.p1 e c.p2 */
	c.p1 = NEW_STACK()
	c.p2 = NEW_STACK()
	return c
==================================================
IS_EMPTY(c)
	return IS_EMPTY(c.p1) && IS_EMPTY(c.p2)
==================================================
ENQUEUE(c,x)
	while !IS_EMPTY(c.p2)
		PUSH(c.p1,POP(c.p2))
	PUSH(c.p1,x)
==================================================
DEQUEUE(c)
	if IS_EMPTY(c)
		error("underflow")
	while !IS_EMPTY(c.p1)
		PUSH(c.p2,POP(c.p1))
	return POP(c.p2)
==================================================
Esercizio 5
==================================================
NEW_STACK()
	/* p è un oggetto con un array di due code p.c[] */
	p.c[0] = NEW_QUEUE()
	p.c[1] = NEW_QUEUE()
	return p
==================================================
IS_EMPTY(p)
	return IS_EMPTY(p.c[0]) && IS_EMPTY(p.c[1])
==================================================
PUSH(p,x)
	if( IS_EMPTY(p.c[0]))
		ENQUEUE(p.c[1],x)
	else
		ENQUEUE(p.c[0],x)
==================================================
POP(p)
	if IS_EMPTY(p) 
		error("underflow")
	piena = 0    /* indice della coda non vuota */
	if( IS_EMPTY(p.c[0]))
		piena = 1
	elem = DEQUEUE(p.c[piena])
	while( !IS_EMPTY(p.c[piena]) )
		ENQUEUE(p.c[1-piena],elem)
		elem = DEQUEUE(p.c[piena])
	return elem
==================================================
	

